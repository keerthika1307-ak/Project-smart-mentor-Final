const mongoose = require('mongoose');
const Student = require('../models/Student');
const User = require('../models/User');
require('dotenv').config();

async function testFeedbackFlow() {
    try {
        // Connect to database
        await mongoose.connect(process.env.MONGODB_URI);
        console.log('✅ Connected to MongoDB');

        // Find a test student
        const student = await Student.findOne().populate('userId');
        if (!student) {
            console.log('❌ No students found in database');
            return;
        }

        console.log(`📋 Testing feedback for: ${student.personalInfo.name} (${student.personalInfo.regNo})`);

        // Add test feedback
        const testFeedback = {
            lastFeedback: `Dear ${student.personalInfo.name}, based on your recent performance analysis, you are showing excellent progress in your academic journey. Your CGPA of ${student.academics.cgpa || 0} demonstrates strong understanding of the subjects. Keep up the good work and continue to maintain consistency in your studies. Your attendance record is also commendable. I recommend focusing on practical applications of your theoretical knowledge to enhance your learning experience further.`,
            lastUpdated: new Date(),
            feedbackType: 'overall',
            generatedBy: 'mentor'
        };

        // Update student's AI feedback
        student.aiFeedback = testFeedback;
        await student.save();
        
        console.log('✅ Feedback saved to database');

        // Display current feedback data
        console.log('\n📊 Current Feedback Data:');
        console.log('Feedback Type:', student.aiFeedback.feedbackType);
        console.log('Generated By:', student.aiFeedback.generatedBy);
        console.log('Last Updated:', student.aiFeedback.lastUpdated);
        console.log('Feedback Preview:', student.aiFeedback.lastFeedback.substring(0, 100) + '...');

        console.log('\n✅ Feedback flow test completed successfully!');
        console.log('📝 Students can now see mentor feedback on their dashboard');

    } catch (error) {
        console.error('❌ Test failed:', error);
    } finally {
        await mongoose.disconnect();
        console.log('🔌 Disconnected from MongoDB');
    }
}

// Run the test
testFeedbackFlow();
